:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc_classes/Loot.xml.

.. _class_Loot:

Loot
====

**Inherits:** ``Resource``

Resource containing a weighted list of loot items for random generation.

.. rst-class:: classref-introduction-group

Description
-----------

The Loot resource represents a loot table containing a weighted list of :ref:`LootItem<class_LootItem>` resources. It provides functionality for weighted random selection of items, commonly used in survival games for treasure chests, enemy drops, and resource gathering. Items with higher weights are more likely to be selected during random generation.



The loot system supports configurable rolls functionality, inspired by Minecraft-style loot tables. You can set minimum and maximum roll counts to generate multiple items in a single loot generation call. For example, setting min_rolls=2 and max_rolls=4 will generate between 2-4 items each time the loot table is used.



The total weight is calculated automatically from all contained loot items, and the random selection uses this total to ensure proper probability distribution.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +--------------------------------------------------------------+-------------------------------------------------+--------+
   | :ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\] | :ref:`items<class_Loot_property_items>`         | ``[]`` |
   +--------------------------------------------------------------+-------------------------------------------------+--------+
   | ``int``                                                      | :ref:`max_rolls<class_Loot_property_max_rolls>` | ``1``  |
   +--------------------------------------------------------------+-------------------------------------------------+--------+
   | ``int``                                                      | :ref:`min_rolls<class_Loot_property_min_rolls>` | ``1``  |
   +--------------------------------------------------------------+-------------------------------------------------+--------+
   | ``String``                                                   | :ref:`name<class_Loot_property_name>`           | ``""`` |
   +--------------------------------------------------------------+-------------------------------------------------+--------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +--------------------------------------------------------------+-------------------------------------------------------------------------------------------------+
   | :ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\] | :ref:`get_random_items<class_Loot_method_get_random_items>`\ (\ rolls\: ``int`` = -1\ ) |const| |
   +--------------------------------------------------------------+-------------------------------------------------------------------------------------------------+
   | ``float``                                                    | :ref:`get_total_weight<class_Loot_method_get_total_weight>`\ (\ ) |const|                       |
   +--------------------------------------------------------------+-------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_Loot_property_items:

.. rst-class:: classref-property

:ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\] **items** = ``[]`` :ref:`ðŸ”—<class_Loot_property_items>`

.. rst-class:: classref-property-setget

- |void| **set_items**\ (\ value\: :ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\]\ )
- :ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\] **get_items**\ (\ )

Array of :ref:`LootItem<class_LootItem>` resources that define what items can be generated and their relative probabilities. Each loot item contains an item ID, weight for probability calculation, and minimum/maximum amount ranges.

.. rst-class:: classref-item-separator

----

.. _class_Loot_property_max_rolls:

.. rst-class:: classref-property

``int`` **max_rolls** = ``1`` :ref:`ðŸ”—<class_Loot_property_max_rolls>`

.. rst-class:: classref-property-setget

- |void| **set_max_rolls**\ (\ value\: ``int``\ )
- ``int`` **get_max_rolls**\ (\ )

Maximum number of rolls when generating random items. Combined with min_rolls to define a range for random roll count generation. Must be greater than or equal to min_rolls. For fixed roll counts, set this equal to min_rolls.

.. rst-class:: classref-item-separator

----

.. _class_Loot_property_min_rolls:

.. rst-class:: classref-property

``int`` **min_rolls** = ``1`` :ref:`ðŸ”—<class_Loot_property_min_rolls>`

.. rst-class:: classref-property-setget

- |void| **set_min_rolls**\ (\ value\: ``int``\ )
- ``int`` **get_min_rolls**\ (\ )

Minimum number of rolls when generating random items. Combined with max_rolls to define a range for random roll count generation. Must be at least 1. For fixed roll counts, set this equal to max_rolls.

.. rst-class:: classref-item-separator

----

.. _class_Loot_property_name:

.. rst-class:: classref-property

``String`` **name** = ``""`` :ref:`ðŸ”—<class_Loot_property_name>`

.. rst-class:: classref-property-setget

- |void| **set_name**\ (\ value\: ``String``\ )
- ``String`` **get_name**\ (\ )

Optional name for this loot table, useful for identification and organization in the inventory database.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_Loot_method_get_random_items:

.. rst-class:: classref-method

:ref:`Array<class_Array>`\[:ref:`LootItem<class_LootItem>`\] **get_random_items**\ (\ rolls\: ``int`` = -1\ ) |const| :ref:`ðŸ”—<class_Loot_method_get_random_items>`

Returns an array of randomly selected :ref:`LootItem<class_LootItem>` resources. When ``rolls`` is -1 (default), uses the configured roll range (min_rolls to max_rolls) with a random number of rolls within that range. When ``rolls`` is a positive number, uses that exact number of rolls, overriding the configured range. Each roll is an independent weighted selection from the loot table. Returns an empty array if no valid items can be generated.

.. rst-class:: classref-item-separator

----

.. _class_Loot_method_get_total_weight:

.. rst-class:: classref-method

``float`` **get_total_weight**\ (\ ) |const| :ref:`ðŸ”—<class_Loot_method_get_total_weight>`

Calculates and returns the total weight of all :ref:`LootItem<class_LootItem>` resources in this loot table. This is used internally for weighted random selection calculations.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
.. |void| replace:: :abbr:`void (No return value.)`
